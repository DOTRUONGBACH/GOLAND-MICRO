// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString, Unique: true},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"Administrator", "Subscriber", "Customer"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "customer_accounts", Type: field.TypeUUID, Nullable: true},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "accounts_customers_accounts",
				Columns:    []*schema.Column{AccountsColumns[6]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BookingsColumns holds the columns for the "bookings" table.
	BookingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "total_cost", Type: field.TypeFloat64},
		{Name: "total_ticket", Type: field.TypeInt, Default: 1},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Success", "Fail", "Canceled"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "customer_bookings", Type: field.TypeUUID, Nullable: true},
		{Name: "flight_belongs_to", Type: field.TypeUUID, Nullable: true},
	}
	// BookingsTable holds the schema information for the "bookings" table.
	BookingsTable = &schema.Table{
		Name:       "bookings",
		Columns:    BookingsColumns,
		PrimaryKey: []*schema.Column{BookingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bookings_customers_bookings",
				Columns:    []*schema.Column{BookingsColumns[6]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "bookings_flights_belongs_to",
				Columns:    []*schema.Column{BookingsColumns[7]},
				RefColumns: []*schema.Column{FlightsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "citizen_id", Type: field.TypeString, Unique: true, Size: 12},
		{Name: "phone", Type: field.TypeString, Size: 10},
		{Name: "address", Type: field.TypeString},
		{Name: "gender", Type: field.TypeEnum, Enums: []string{"Male", "Female", "Other"}},
		{Name: "date_of_birth", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
	}
	// FlightsColumns holds the columns for the "flights" table.
	FlightsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "flight_code", Type: field.TypeString},
		{Name: "from", Type: field.TypeString, Size: 255},
		{Name: "to", Type: field.TypeString, Size: 255},
		{Name: "departure_date", Type: field.TypeTime},
		{Name: "departure_time", Type: field.TypeTime},
		{Name: "duration", Type: field.TypeInt},
		{Name: "capacity", Type: field.TypeInt, Default: 50},
		{Name: "available_seat", Type: field.TypeInt, Default: 50},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Scheduled", "Delayed", "Departed", "Arrived", "Cancelled"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// FlightsTable holds the schema information for the "flights" table.
	FlightsTable = &schema.Table{
		Name:       "flights",
		Columns:    FlightsColumns,
		PrimaryKey: []*schema.Column{FlightsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		BookingsTable,
		CustomersTable,
		FlightsTable,
	}
)

func init() {
	AccountsTable.ForeignKeys[0].RefTable = CustomersTable
	BookingsTable.ForeignKeys[0].RefTable = CustomersTable
	BookingsTable.ForeignKeys[1].RefTable = FlightsTable
}
